[{"/home/serv3/frontend/ReactTodoApp/src/index.js":"1","/home/serv3/frontend/ReactTodoApp/src/App.jsx":"2","/home/serv3/frontend/ReactTodoApp/src/http-common.js":"3"},{"size":222,"mtime":1623714389272,"results":"4","hashOfConfig":"5"},{"size":3361,"mtime":1623878319729,"results":"6","hashOfConfig":"5"},{"size":157,"mtime":1623876552830,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"e8he1u",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/serv3/frontend/ReactTodoApp/src/index.js",[],["16","17"],"/home/serv3/frontend/ReactTodoApp/src/App.jsx",["18","19"],"import React, { useState } from \"react\";\nimport shortid from \"shortid\";\nimport http from \"./http-common\"\nimport axios from \"axios\";\n\nfunction App() {\n  const [tarea, setTarea] = useState(\"\");\n  const [tareas, setTareas] = useState([]);\n  const [edit, setEdit] = useState(false);\n  const [id, setId] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if (!tarea.trim()) {\n      console.log(\"Elemento vacio\");\n      setError(\"Escriba la tarea a agregar ...\");\n      return;\n    }\n    setTareas([...tareas, { id: shortid.generate(), task: tarea }]);\n    this.getTasks();\n    setTarea(\"\")\n    setError(null)\n  };\n\n  const deleteTask = (id) => {\n    const array = tareas.filter((item) => item.id !== id);\n    setTareas(array);\n  };\n\n  const update = (item) => {\n    setEdit(true)\n    setTarea(item.task)\n    setId(item.id)\n  };\n\n  const updateTask = (e) => {\n    e.preventDefault();\n    if (!tarea.trim()) {\n      console.log(\"Elemento vacio\");\n      setError(\"Escriba la tarea a actualizar ...\");\n      return;\n    }\n    const array = tareas.map((item) => item.id === id ? { id, task: tarea } : item);\n    setTareas(array);\n    setEdit(false);\n    setTarea(\"\");\n    setId(\"\");\n    setError(null);\n  };\n\n  const getTasks = () => {\n    return axios.get('http://10.147.20.77:5000/').then((response) => {\n      console.log(response);\n    });\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center\">TODO List</h1>\n      <hr />\n      <div className=\"row\">\n        <div className=\"col-8\">\n          <h4 className=\"text-center\">Lista de tareas</h4>\n          <ul className=\"list-group\">\n            {tareas.length === 0 ? (\n              <li className=\"list-group-item\">No hay tareas</li>\n            ) : (\n                tareas.map((item) => (\n                  <li className=\"list-group-item\" key={item.id}>\n                    <span className=\"lead\">{item.task}</span>\n                    <button\n                      className=\"btn btn-danger btn-sm float-end mx-2\"\n                      onClick={() => deleteTask(item.id)}\n                      disabled={edit}\n                    >\n                      Eliminar\n                  </button>\n                    <button className=\"btn btn-warning btn-sm float-end\" onClick={() => update(item)}>\n                      Editar\n                  </button>\n                  </li>\n                ))\n              )}\n          </ul>\n        </div>\n        <div className=\"col-4\">\n          <h4 className=\"text-center\">{edit ? \"Editar\" : \"Agregar\"}</h4>\n          <form className=\"d-grid\" onSubmit={edit ? updateTask : getTasks}>\n            {error ? <span className=\"text-danger\">{error}</span> : null}\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Ingrese tarea\"\n              onChange={(e) => setTarea(e.target.value)}\n              value={tarea}\n            />\n            {edit ? (\n              <button className=\"btn btn-warning btn-block\" type=\"submit\">\n                Editar\n              </button>\n            ) : (\n                <button className=\"btn btn-dark btn-block\" type=\"submit\">\n                  Agregar\n                </button>\n              )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/serv3/frontend/ReactTodoApp/src/http-common.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":3,"column":8,"nodeType":"26","messageId":"27","endLine":3,"endColumn":12},{"ruleId":"24","severity":1,"message":"28","line":13,"column":9,"nodeType":"26","messageId":"27","endLine":13,"endColumn":16},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","'addTask' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]